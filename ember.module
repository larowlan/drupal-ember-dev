<?php

function ember_page_build(&$page) {
  if (path_is_admin(current_path())) {
    return;
  }
  // Ember accepts configuration from the server in the form of a
  // <meta> tag.
  $emberENV = [
      // TODO: an Ember app can run inside a base URL, I would
      // assume Drupal has a similar config option that should be
      // passed through here.
      "baseURL" => "/",

      // This determines how Ember updates the URL. "history" means
      // we should use the browser's History.pushState API to make
      // Ember transitions use "real" URLs (as opposed to updating
      // location.hash). This ensures that Ember-derived URLs will
      // map directly to Drupal URLs, but it requires browsers with
      // pushState support.
      //
      // We can still support older browsers by either choosing not
      // to use Ember to manage those transitions
      // (progressive-enhancement only) or by letting them do all
      // their rendering clientside (where location.hash is
      // visible).
      "locationType" => "history",


      // This controls what routes Ember will allow to load as
      // normal page refreshes, as opposed to XHR. Note that this
      // does *not* control whether a given route is rendered by
      // Drupal vs Ember -- any page can still be a combination of
      // both or either.
      //
      // These are regular expressions as interpreted by
      // Javascript. All URLs are already adjusted to be relative to
      // baseUrl (see earlier comment above).
      //
      // TODO: load this setting via conventional Drupal configuration.
      //
      // This default configuration allows Ember to control all
      // transitions.
      "cedeToDrupal" => [],

      "modulePrefix" => "drupalcon",
      "environment" => "development",
      "APP" => []
  ];

  $page['content']['#attached']['library'][] = ['ember', 'ember'];
  $page['content']['#attached']['drupal_add_html_head'][] = [
    [
      '#tag' => 'meta',
      '#attributes' => [
        'name' => 'pnx/config/environment',
        'content' => ember_urlencode_uri_component(json_encode($emberENV, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_AMP | JSON_HEX_QUOT))
      ]
    ],
    'ember_meta_config'
  ];

}

/**
 * Implements hook_library().
 */
function ember_library() {
  $libraries['ember'] = [
    'title' => 'Ember',
    'website' => 'https://emberjs.com/',
    'version' => VERSION,
    'js' => [
      'http://localhost:4200/assets/vendor.js' => ['group' => JS_LIBRARY, 'type' => 'external'],
      'http://localhost:4200/assets/pnx.js' => ['group' => JS_LIBRARY, 'type' => 'external'],
      'http://localhost:49154/livereload.js' => ['group' => JS_LIBRARY, 'type' => 'external'],
    ],
    'css' => [
      'http://localhost:4200/assets/vendor.css' => ['type' => 'external'],
      'http://localhost:4200/assets/pnx.css' => ['type' => 'external'],
    ],
    'dependencies' => [
      ['system', 'jquery'],
      ['system', 'jquery.once'],
    ],
  ];
  return $libraries;
}

/**
 * Encode uri components.
 *
 * @param string $str
 *   String to encode.
 *
 * @return string
 *   Encoded string.
 */
function ember_urlencode_uri_component($str) {
  $revert = array('%21'=>'!', '%2A'=>'*', '%27'=>"'", '%28'=>'(', '%29'=>')');
  return strtr(rawurlencode($str), $revert);
}
